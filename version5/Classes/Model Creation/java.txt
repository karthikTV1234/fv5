public class Fruit {
    private int id;
    private String name;
    private double price;

    // Constructor
    public Fruit(int id, String name, double price) {
        this.id = id;
        this.name = name;
        this.price = price;
    }

    // Getters
    public int getId() { return id; }
    public String getName() { return name; }
    public double getPrice() { return price; }

    // Setters
    public void setId(int id) { this.id = id; }
    public void setName(String name) { this.name = name; }
    public void setPrice(double price) { this.price = price; }

    // toString() method
    @Override
    public String toString() {
        return "Fruit{id=" + id + ", name='" + name + "', price=" + price + "}";
    }
}
✅ Pros: Full control over getters, setters, and encapsulation.
❌ Cons: Boilerplate code (can be reduced using Lombok or records in newer Java).


Usage:
public static void main(String[] args) {
    Fruit apple = new Fruit(1, "Apple", 100.0);
    System.out.println(apple);  // Output: Fruit{id=1, name='Apple', price=100.0}
}

